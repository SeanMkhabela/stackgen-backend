name: Node.js CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    # Updated MongoDB service
    services:
      mongodb:
        image: mongo:6.0
        ports:
          - 27017:27017

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Verify MongoDB connection
        run: |
          echo "Waiting for MongoDB to be ready..."
          apt-get update && apt-get install -y mongodb-clients || true
          for i in {1..20}; do
            mongo --eval "db.serverStatus()" mongodb://localhost:27017/test && echo "MongoDB is ready!" && break
            echo "Waiting for MongoDB ($i/20)..."
            sleep 1
          done

      - name: Run tests
        run: npm test
        env:
          NODE_ENV: test
          MONGO_URI_TEST: mongodb://localhost:27017/test
          JWT_SECRET: test_secret_for_ci

    # Skip artifact upload for now to get tests passing
    # - name: Upload test results
    #   if: always()
    #   uses: actions/upload-artifact@v3
    #   with:
    #     name: test-results
    #     path: |
    #       ./coverage
    #       ./test-results
    #     if-no-files-found: warn

  # Add a status check job that depends on the test job
  status-check:
    needs: test
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Check test status
        run: |
          if [ "${{ needs.test.result }}" != "success" ]; then
            echo "Tests failed, blocking merge to main"
            exit 1
          fi
          echo "All tests passed!"
